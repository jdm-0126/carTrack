{"ast":null,"code":"// filter n properties for truthy or falsy values on type T (no effect if no filter selected)\nexport function genericFilter(object, filters) {\n  // no filters; no effect - return true\n  if (filters.length === 0) {\n    return true;\n  }\n\n  return filters.every(filter => {\n    return filter.isTruthyPicked ? object[filter.property] : !object[filter.property];\n  });\n}","map":{"version":3,"sources":["/Users/jdm0126/Documents/projects/carTrack/client/src/utils/genericFilter.ts"],"names":["genericFilter","object","filters","length","every","filter","isTruthyPicked","property"],"mappings":"AAEA;AACA,OAAO,SAASA,aAAT,CAA0BC,MAA1B,EAAqCC,OAArC,EAAiE;AACtE;AACA,MAAIA,OAAO,CAACC,MAAR,KAAmB,CAAvB,EAA0B;AACxB,WAAO,IAAP;AACD;;AAED,SAAOD,OAAO,CAACE,KAAR,CAAeC,MAAD,IAAY;AAC/B,WAAOA,MAAM,CAACC,cAAP,GAAwBL,MAAM,CAACI,MAAM,CAACE,QAAR,CAA9B,GAAkD,CAACN,MAAM,CAACI,MAAM,CAACE,QAAR,CAAhE;AACD,GAFM,CAAP;AAGD","sourcesContent":["import IFilter from \"../interfaces/IFilter\";\n\n// filter n properties for truthy or falsy values on type T (no effect if no filter selected)\nexport function genericFilter<T>(object: T, filters: Array<IFilter<T>>) {\n  // no filters; no effect - return true\n  if (filters.length === 0) {\n    return true;\n  }\n\n  return filters.every((filter) => {\n    return filter.isTruthyPicked ? object[filter.property] : !object[filter.property];\n  });\n}\n"]},"metadata":{},"sourceType":"module"}