{"ast":null,"code":"var _jsxFileName = \"/Users/jdm0126/Documents/projects/carTrack/client/src/components/Filters.tsx\";\nimport * as React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Filters(props) {\n  const {\n    object,\n    filters,\n    onChangeFilter\n  } = props;\n\n  const labelTruthy = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"is \", /*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"truthy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n\n  const labelFalsy = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"is \", /*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"falsy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-1 my-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"mt-3\",\n      children: \"Filters! Try us too! (We also work!)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), Object.keys(object).map(key => {\n      const getRadioButton = isTruthyPicked => {\n        const id = isTruthyPicked ? `radio-defined-${key}` : `radio-not-defined-${key}`;\n        const label = isTruthyPicked ? labelTruthy : labelFalsy;\n\n        const getChecked = () => {\n          const x = filters.filter(x => x.property === key);\n          return x.length === 1 && x[0].isTruthyPicked === isTruthyPicked;\n        };\n\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: id,\n            value: key,\n            checked: getChecked(),\n            onChange: event => onChangeFilter(key, event.target.checked, isTruthyPicked),\n            className: \"m-1 ml-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: id,\n            children: [\"'\", key, \"' \", label]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true);\n      };\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group my-3\",\n        children: [getRadioButton(true), getRadioButton(false)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_c = Filters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"sources":["/Users/jdm0126/Documents/projects/carTrack/client/src/components/Filters.tsx"],"names":["React","Filters","props","object","filters","onChangeFilter","labelTruthy","labelFalsy","Object","keys","map","key","getRadioButton","isTruthyPicked","id","label","getChecked","x","filter","property","length","event","target","checked"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAcA,OAAO,SAASC,OAAT,CAAoBC,KAApB,EAA6C;AAClD,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA;AAAnB,MAAsCH,KAA5C;;AAEA,QAAMI,WAAW,gBACf;AAAA,mCACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADL;AAAA,kBADF;;AAMA,QAAMC,UAAU,gBACd;AAAA,mCACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADL;AAAA,kBADF;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAO,MAAA,SAAS,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,MAAM,CAACC,IAAP,CAAYN,MAAZ,EAAoBO,GAApB,CAAyBC,GAAD,IAAS;AAChC,YAAMC,cAAc,GAAIC,cAAD,IAAwC;AAC7D,cAAMC,EAAE,GAAGD,cAAc,GACpB,iBAAgBF,GAAI,EADA,GAEpB,qBAAoBA,GAAI,EAF7B;AAGA,cAAMI,KAAK,GAAGF,cAAc,GACxBP,WADwB,GAExBC,UAFJ;;AAIA,cAAMS,UAAU,GAAG,MAAM;AACvB,gBAAMC,CAAC,GAAGb,OAAO,CAACc,MAAR,CAAeD,CAAC,IAAIA,CAAC,CAACE,QAAF,KAAeR,GAAnC,CAAV;AACA,iBAAOM,CAAC,CAACG,MAAF,KAAa,CAAb,IAAkBH,CAAC,CAAC,CAAD,CAAD,CAAKJ,cAAL,KAAwBA,cAAjD;AACD,SAHD;;AAKA,4BACE;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,EAAE,EAAEC,EAFN;AAGE,YAAA,KAAK,EAAEH,GAHT;AAIE,YAAA,OAAO,EAAEK,UAAU,EAJrB;AAKE,YAAA,QAAQ,EAAGK,KAAD,IACRhB,cAAc,CAACM,GAAD,EAAaU,KAAK,CAACC,MAAN,CAAaC,OAA1B,EAAmCV,cAAnC,CANlB;AAQE,YAAA,SAAS,EAAE;AARb;AAAA;AAAA;AAAA;AAAA,kBADF,eAWE;AAAO,YAAA,OAAO,EAAEC,EAAhB;AAAA,4BACIH,GADJ,QACWI,KADX;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF;AAAA,wBADF;AAiBD,OA9BD;;AAgCA,0BACE;AAAe,QAAA,SAAS,EAAC,kBAAzB;AAAA,mBACGH,cAAc,CAAC,IAAD,CADjB,EAEGA,cAAc,CAAC,KAAD,CAFjB;AAAA,SAAUD,GAAV;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KAvCA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6CD;KA5DeV,O","sourcesContent":["import * as React from \"react\";\nimport { ReactNode } from \"react\";\nimport IFilter from \"../interfaces/IFilter\";\n\nexport interface IFiltersProps<T> {\n  object: T;\n  filters: Array<IFilter<T>>;\n  onChangeFilter: (\n    filterProperty: keyof T,\n    checked: boolean,\n    isTruthyPicked: boolean\n  ) => void;\n}\n\nexport function Filters<T>(props: IFiltersProps<T>) {\n  const { object, filters, onChangeFilter } = props;\n\n  const labelTruthy = (\n    <>\n      is <b>truthy</b>\n    </>\n  );\n\n  const labelFalsy = (\n    <>\n      is <b>falsy</b>\n    </>\n  );\n\n  return (\n    <div className=\"p-1 my-2\">\n      <label className=\"mt-3\">Filters! Try us too! (We also work!)</label>\n      {Object.keys(object).map((key) => {\n        const getRadioButton = (isTruthyPicked: boolean): ReactNode => {\n          const id = isTruthyPicked\n            ? `radio-defined-${key}`\n            : `radio-not-defined-${key}`;\n          const label = isTruthyPicked\n            ? labelTruthy\n            : labelFalsy;\n\n          const getChecked = () => {\n            const x = filters.filter(x => x.property === key);\n            return x.length === 1 && x[0].isTruthyPicked === isTruthyPicked;\n          }\n\n          return (\n            <>\n              <input\n                type=\"radio\"\n                id={id}\n                value={key}\n                checked={getChecked()}\n                onChange={(event) =>\n                  onChangeFilter(key as any, event.target.checked, isTruthyPicked)\n                }\n                className={\"m-1 ml-3\"}\n              />\n              <label htmlFor={id}>\n                '{key}' {label}\n              </label>\n            </>\n          );\n        };\n\n        return (\n          <div key={key} className=\"input-group my-3\">\n            {getRadioButton(true)}\n            {getRadioButton(false)}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}