{"ast":null,"code":"var _jsxFileName = \"/Users/jdm0126/Documents/projects/carTrack/client/src/components/SearchInput.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport useDebounce from \"../hooks/useDebounce\";\nimport { Container, Row, Col } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SearchInput(props) {\n  _s();\n\n  const [searchQuery, setSearchQuery] = useState();\n  const {\n    onChangeSearchQuery\n  } = props;\n  const debouncedSearchQuery = useDebounce(searchQuery, 250);\n  useEffect(() => {\n    if (debouncedSearchQuery !== undefined) {\n      onChangeSearchQuery(debouncedSearchQuery);\n    }\n  }, [debouncedSearchQuery, onChangeSearchQuery]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 5,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"search\",\n            className: \"mt-3\",\n            children: \"Search! Try me! (I work!)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"search\",\n            className: \"form-control full-width\",\n            type: \"search\",\n            placeholder: \"Search...\",\n            \"aria-label\": \"Search\",\n            onChange: event => setSearchQuery(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(SearchInput, \"juTaE71J9W/sFJUB3ZWG1BCC2I0=\", false, function () {\n  return [useDebounce];\n});\n\n_c = SearchInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchInput\");","map":{"version":3,"sources":["/Users/jdm0126/Documents/projects/carTrack/client/src/components/SearchInput.tsx"],"names":["React","useEffect","useState","useDebounce","Container","Row","Col","SearchInput","props","searchQuery","setSearchQuery","onChangeSearchQuery","debouncedSearchQuery","undefined","event","target","value"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,YAApC;;;AAMA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA0C;AAAA;;AACvD,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,EAA9C;AACA,QAAM;AAAES,IAAAA;AAAF,MAA0BH,KAAhC;AACA,QAAMI,oBAAoB,GAAGT,WAAW,CAACM,WAAD,EAAc,GAAd,CAAxC;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,oBAAoB,KAAKC,SAA7B,EAAwC;AACtCF,MAAAA,mBAAmB,CAACC,oBAAD,CAAnB;AACD;AACF,GAJQ,EAIN,CAACA,oBAAD,EAAuBD,mBAAvB,CAJM,CAAT;AAMA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAA,6BACE,QAAC,GAAD;AAAA,gCACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA,kCACA;AAAO,YAAA,OAAO,EAAC,QAAf;AAAwB,YAAA,SAAS,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEI;AACE,YAAA,EAAE,EAAC,QADL;AAEE,YAAA,SAAS,EAAC,yBAFZ;AAGE,YAAA,IAAI,EAAC,QAHP;AAIE,YAAA,WAAW,EAAC,WAJd;AAKE,0BAAW,QALb;AAME,YAAA,QAAQ,EAAGG,KAAD,IAAWJ,cAAc,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd;AANrC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAaE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAqBD;;GAhCuBT,W;UAGOJ,W;;;KAHPI,W","sourcesContent":["import * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport useDebounce from \"../hooks/useDebounce\";\nimport { Container, Row, Col } from 'reactstrap';\n\nexport interface ISearchProps {\n  onChangeSearchQuery: (searchQuery: string) => void;\n}\n\nexport default function SearchInput(props: ISearchProps) {\n  const [searchQuery, setSearchQuery] = useState<string | undefined>();\n  const { onChangeSearchQuery } = props;\n  const debouncedSearchQuery = useDebounce(searchQuery, 250);\n\n  useEffect(() => {\n    if (debouncedSearchQuery !== undefined) {\n      onChangeSearchQuery(debouncedSearchQuery);\n    }\n  }, [debouncedSearchQuery, onChangeSearchQuery]);\n\n  return (\n    <>\n      <Container>\n        <Row>\n          <Col></Col>\n            <Col xs={5}>\n            <label htmlFor=\"search\" className=\"mt-3\">Search! Try me! (I work!)</label>\n                <input\n                  id=\"search\"\n                  className=\"form-control full-width\"\n                  type=\"search\"\n                  placeholder=\"Search...\"\n                  aria-label=\"Search\"\n                  onChange={(event) => setSearchQuery(event.target.value)}\n                />\n            </Col>\n          <Col></Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}