{"ast":null,"code":"var _jsxFileName = \"/Users/jdm0126/Documents/projects/carTrack/client/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport SearchInput from \"./components/SearchInput\";\nimport { WidgetCard } from \"./components/WidgetCard\";\nimport { genericSearch } from \"./utils/genericSearch\";\nimport { genericFilter } from \"./utils/genericFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [data, setData] = useState([]);\n  const [activeFilters, setActiveFilters] = useState([]);\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => {\n      if (response.status !== 200) {\n        console.log('Looks like there was a problem. Status Code: ' + response.status);\n        return;\n      } // Examine the text in the response\n\n\n      response.json().then(lam => {\n        setData(lam);\n      });\n    }).catch(function (err) {\n      console.log('Fetch Error :-S', err);\n    }); // return () => {\n    //   cleanup\n    // }\n  }, []);\n  const resultdata = data.filter(res => genericSearch(res, [\"name\", \"email\"], query)).filter(res => genericFilter(res, activeFilters)); // .sort((widgetA, widgetB) =>\n  //   genericSort<IWidget>(widgetA, widgetB, activeSorter)\n  // );\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(SearchInput, {\n      onChangeSearchQuery: query => setQuery(query)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Results:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), resultdata.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: resultdata.map(widget => /*#__PURE__*/_jsxDEV(WidgetCard, { ...widget\n      }, widget.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), resultdata.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No results found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Vu7n3ZTslGbrGXrNk6FgqlK0sgQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jdm0126/Documents/projects/carTrack/client/src/App.tsx"],"names":["React","useState","useEffect","SearchInput","WidgetCard","genericSearch","genericFilter","App","query","setQuery","data","setData","activeFilters","setActiveFilters","fetch","then","response","status","console","log","json","lam","catch","err","resultdata","filter","res","length","map","widget","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AAEA,SAASC,UAAT,QAA2B,yBAA3B;AAEA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,aAAT,QAA8B,uBAA9B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAS,EAAT,CAAlC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAChD,EADgD,CAAlD;AAIAC,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAc;AAChB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BC,QAAAA,OAAO,CAACC,GAAR,CAAY,kDACVH,QAAQ,CAACC,MADX;AAEA;AACD,OALe,CAOhB;;;AACAD,MAAAA,QAAQ,CAACI,IAAT,GAAgBL,IAAhB,CAAsBM,GAAD,IAAS;AAC5BV,QAAAA,OAAO,CAACU,GAAD,CAAP;AACD,OAFD;AAGD,KAZH,EAcCC,KAdD,CAcO,UAASC,GAAT,EAAc;AACnBL,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BI,GAA/B;AACD,KAhBD,EADc,CAkBd;AACA;AACA;AACD,GArBQ,EAqBN,EArBM,CAAT;AAsBA,QAAMC,UAAU,GAAGd,IAAI,CACpBe,MADgB,CACRC,GAAD,IACNrB,aAAa,CAAUqB,GAAV,EAAe,CAAC,MAAD,EAAS,OAAT,CAAf,EAAkClB,KAAlC,CAFE,EAIhBiB,MAJgB,CAIRC,GAAD,IAASpB,aAAa,CAAUoB,GAAV,EAAed,aAAf,CAJb,CAAnB,CA9Ba,CAmCX;AACA;AACA;;AAEF,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,mBAAmB,EAAGJ,KAAD,IAAWC,QAAQ,CAACD,KAAD;AAArD;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAIGgB,UAAU,CAACG,MAAX,GAAoB,CAApB,iBACC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACGH,UAAU,CAACI,GAAX,CAAgBC,MAAD,iBACd,QAAC,UAAD,OAAgCA;AAAhC,SAAiBA,MAAM,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YALJ,EAWGN,UAAU,CAACG,MAAX,KAAsB,CAAtB,iBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAX9B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAtDQpB,G;;KAAAA,G;AAwDT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport SearchInput from \"./components/SearchInput\";\nimport IWidget from \"./interfaces/IWidget\"\nimport { WidgetCard } from \"./components/WidgetCard\";\nimport IFilter from \"./interfaces/IFilter\";\nimport { genericSearch } from \"./utils/genericSearch\";\nimport { genericFilter } from \"./utils/genericFilter\";\n\nfunction App() {\n  const [query, setQuery] = useState<string>(\"\");\n  const [data, setData] = useState([]);\n\n  const [activeFilters, setActiveFilters] = useState<Array<IFilter<IWidget>>>(\n    []\n  );\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then((response) => {\n        if (response.status !== 200) {\n          console.log('Looks like there was a problem. Status Code: ' +\n            response.status);\n          return;\n        }\n  \n        // Examine the text in the response\n        response.json().then((lam) => {\n          setData(lam);\n        });\n      }\n    )\n    .catch(function(err) {\n      console.log('Fetch Error :-S', err);\n    });\n    // return () => {\n    //   cleanup\n    // }\n  }, [])\n  const resultdata = data\n    .filter((res) =>\n      genericSearch<IWidget>(res, [\"name\", \"email\"], query)\n    )\n    .filter((res) => genericFilter<IWidget>(res, activeFilters))\n    // .sort((widgetA, widgetB) =>\n    //   genericSort<IWidget>(widgetA, widgetB, activeSorter)\n    // );\n\n  return (\n    <div className=\"App\">\n      <SearchInput onChangeSearchQuery={(query) => setQuery(query)} />\n\n      <h3>Results:</h3>\n      {resultdata.length > 0 && (\n        <div className=\"row\">\n          {resultdata.map((widget) => (\n            <WidgetCard key={widget.id} {...widget} />\n          ))}\n        </div>\n      )}\n      {resultdata.length === 0 && <p>No results found!</p>}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}