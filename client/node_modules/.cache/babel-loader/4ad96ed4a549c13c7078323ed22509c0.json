{"ast":null,"code":"var _jsxFileName = \"/Users/jdm0126/Documents/projects/carTrack/client/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport './App.css';\nimport SearchInput from \"./components/SearchInput\";\nimport { WidgetCard } from \"./components/WidgetCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [data, setData] = useState([]);\n  const [activeFilters, setActiveFilters] = useState([]);\n  const resultdata = data.filter(res => genericSearch(res, [\"title\", \"description\"], query)).filter(res => genericFilter(res, activeFilters)).sort((widgetA, widgetB) => genericSort(widgetA, widgetB, activeSorter));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(SearchInput, {\n      onChangeSearchQuery: query => setQuery(query)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Results:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), resultdata.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: resultdata.map(widget => /*#__PURE__*/_jsxDEV(WidgetCard, { ...widget\n      }, widget.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), resultdata.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No results found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Y/k6HslY1hISQzW3j9A58HI/tsI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jdm0126/Documents/projects/carTrack/client/src/App.tsx"],"names":["React","useState","SearchInput","WidgetCard","App","query","setQuery","data","setData","activeFilters","setActiveFilters","resultdata","filter","res","genericSearch","genericFilter","sort","widgetA","widgetB","genericSort","activeSorter","length","map","widget","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AAEA,SAASC,UAAT,QAA2B,yBAA3B;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAS,EAAT,CAAlC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAChD,EADgD,CAAlD;AAIA,QAAMU,UAAU,GAAGJ,IAAI,CACpBK,MADgB,CACRC,GAAD,IACNC,aAAa,CAAUD,GAAV,EAAe,CAAC,OAAD,EAAU,aAAV,CAAf,EAAyCR,KAAzC,CAFE,EAIhBO,MAJgB,CAIRC,GAAD,IAASE,aAAa,CAAUF,GAAV,EAAeJ,aAAf,CAJb,EAKhBO,IALgB,CAKX,CAACC,OAAD,EAAUC,OAAV,KACJC,WAAW,CAAUF,OAAV,EAAmBC,OAAnB,EAA4BE,YAA5B,CANI,CAAnB;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,mBAAmB,EAAGf,KAAD,IAAWC,QAAQ,CAACD,KAAD;AAArD;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAIGM,UAAU,CAACU,MAAX,GAAoB,CAApB,iBACC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACGV,UAAU,CAACW,GAAX,CAAgBC,MAAD,iBACd,QAAC,UAAD,OAAgCA;AAAhC,SAAiBA,MAAM,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YALJ,EAWGb,UAAU,CAACU,MAAX,KAAsB,CAAtB,iBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAX9B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAhCQjB,G;;KAAAA,G;AAkCT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport './App.css';\nimport SearchInput from \"./components/SearchInput\";\nimport IWidget from \"./interfaces/IWidget\"\nimport { WidgetCard } from \"./components/WidgetCard\";\nimport IFilter from \"./interfaces/IFilter\";\n\nfunction App() {\n  const [query, setQuery] = useState<string>(\"\");\n  const [data, setData] = useState([]);\n\n  const [activeFilters, setActiveFilters] = useState<Array<IFilter<IWidget>>>(\n    []\n  );\n\n  const resultdata = data\n    .filter((res) =>\n      genericSearch<IWidget>(res, [\"title\", \"description\"], query)\n    )\n    .filter((res) => genericFilter<IWidget>(res, activeFilters))\n    .sort((widgetA, widgetB) =>\n      genericSort<IWidget>(widgetA, widgetB, activeSorter)\n    );\n\n  return (\n    <div className=\"App\">\n      <SearchInput onChangeSearchQuery={(query) => setQuery(query)} />\n\n      <h3>Results:</h3>\n      {resultdata.length > 0 && (\n        <div className=\"row\">\n          {resultdata.map((widget) => (\n            <WidgetCard key={widget.id} {...widget} />\n          ))}\n        </div>\n      )}\n      {resultdata.length === 0 && <p>No results found!</p>}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}