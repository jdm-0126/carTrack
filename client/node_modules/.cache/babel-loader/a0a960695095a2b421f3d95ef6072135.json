{"ast":null,"code":"// case insensitive search of n-number properties of type T\n// returns true if at least one of the property values includes the query value\nexport function genericSearch(object, properties, query) {\n  if (query === \"\") {\n    return true;\n  }\n\n  return properties.some(property => {\n    const value = object[property];\n\n    if (typeof value === \"string\" || typeof value === \"number\") {\n      return value.toString().toLowerCase().includes(query.toLowerCase());\n    }\n\n    return false;\n  });\n}","map":{"version":3,"sources":["/Users/jdm0126/Documents/projects/carTrack/client/src/utils/genericSearch.ts"],"names":["genericSearch","object","properties","query","some","property","value","toString","toLowerCase","includes"],"mappings":"AAAA;AACA;AACA,OAAO,SAASA,aAAT,CACHC,MADG,EAEHC,UAFG,EAGHC,KAHG,EAII;AAEP,MAAIA,KAAK,KAAK,EAAd,EAAkB;AACd,WAAO,IAAP;AACH;;AAED,SAAOD,UAAU,CAACE,IAAX,CAAiBC,QAAD,IAAc;AACjC,UAAMC,KAAK,GAAGL,MAAM,CAACI,QAAD,CAApB;;AACA,QAAI,OAAOC,KAAP,KAAiB,QAAjB,IAA6B,OAAOA,KAAP,KAAiB,QAAlD,EAA4D;AACxD,aAAOA,KAAK,CAACC,QAAN,GAAiBC,WAAjB,GAA+BC,QAA/B,CAAwCN,KAAK,CAACK,WAAN,EAAxC,CAAP;AACH;;AACD,WAAO,KAAP;AACH,GANM,CAAP;AAOH","sourcesContent":["// case insensitive search of n-number properties of type T\n// returns true if at least one of the property values includes the query value\nexport function genericSearch<T>(\n    object: T,\n    properties: Array<keyof T>,\n    query: string\n): boolean {\n\n    if (query === \"\") {\n        return true;\n    } \n\n    return properties.some((property) => {\n        const value = object[property];\n        if (typeof value === \"string\" || typeof value === \"number\") {\n            return value.toString().toLowerCase().includes(query.toLowerCase());\n        }\n        return false;\n    });\n}"]},"metadata":{},"sourceType":"module"}